popup = paste0("County: ", cvl_rva_measures$County, "<br>",
"Tract: ", cvl_rva_measures$NAMELSAD, "<br>",
"Dissimilarity Index ", round(cvl_rva_measures$dissim_wb_block
, 2)))%>%
addLegend("topright", pal = pal, values = cvl_rva_measures$dissim_wb_block
,
title = "Dissimilarity Indewx", opacity = 0.7)
TenureByRace <- st_transform(TenureByRace, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = TenureByRace$PercOfBlkRenters) # viridis
leaflet(TenureByRace) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(PercOfBlkRenters),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", TenureByRace$County, "<br>",
"Tract: ", TenureByRace$NAMELSAD, "<br>",
"Gini Index: ", round(TenureByRace$PercOfBlkRenters, 2)))%>%
addLegend("topright", pal = pal, values = TenureByRace$PercOfBlkRenters,
title = "Percentage of Black Renters", opacity = 0.7)
cvl_rva_measures <- st_transform(cvl_rva_measures, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = cvl_rva_measures$dissim_wb_block
) # viridis
#leaflet(cvl_rva_measures) %>%
cvl_rva_measures %>%
filter(dissim_wb_block >= 0.5 ) %>%
leaflet() %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(dissim_wb_block),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", cvl_rva_measures$County, "<br>",
"Tract: ", cvl_rva_measures$NAMELSAD, "<br>",
"Dissimilarity Index ", round(cvl_rva_measures$dissim_wb_block
, 2)))%>%
addLegend("topright", pal = pal, values = cvl_rva_measures$dissim_wb_block
,
title = "Dissimilarity Indewx", opacity = 0.7)
cvl_rva_measures<- cvl_rva_measures %>%
mutate(FipCodes=str_sub(GEOID,3,5)) %>%
mutate(County = case_when(
FipCodes=="540"~"Charlottesville",
FipCodes=="109"~"Louisa",
FipCodes=="125"~"Nelson",
FipCodes=="065"~"Fluvanna",
FipCodes=="003"~"Albemarle",
FipCodes=="079"~"Greene",
FipCodes=="760"~"Richmond City",
FipCodes=="087"~"Henrico County",
FipCodes=="041"~"Chesterfield County",
FipCodes=="670"~"Hopewell City",
FipCodes=="730"~"Petersburg City"
))
cvl_rva_measures<-cvl_rva_measures %>%
mutate(Region=case_when(
FipCodes %in% c("540","109","125", "065", "003", "079")~"Charlottesville",
FipCodes %in% c("760","087","041", "670", "730")~"Richmond"
))
View(cvl_rva_measures)
View(cvl_rva_measures)
cvl_rva_measures <- st_transform(cvl_rva_measures, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = cvl_rva_measures$dissim_wb_block
) # viridis
#leaflet(cvl_rva_measures) %>%
cvl_rva_measures %>%
filter(dissim_wb_block >= 0.5 ) %>%
leaflet() %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(dissim_wb_block),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", cvl_rva_measures$Region, "<br>",
"County: ", cvl_rva_measures$County, "<br>",
"Tract: ", cvl_rva_measures$NAMELSAD, "<br>",
"Dissimilarity Index ", round(cvl_rva_measures$dissim_wb_block, 2)))%>%
addLegend("topright", pal = pal, values = cvl_rva_measures$dissim_wb_block
,
title = "Dissimilarity Indewx", opacity = 0.7)
cvl_rva_measures <- st_transform(cvl_rva_measures, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = cvl_rva_measures$dissim_wb_block
) # viridis
# cvl_rva_measures %>%
#   filter(dissim_wb_block >= 0.5 ) %>%
leaflet(cvl_rva_measures) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(dissim_wb_block),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", cvl_rva_measures$Region, "<br>",
"County: ", cvl_rva_measures$County, "<br>",
"Tract: ", cvl_rva_measures$NAMELSAD, "<br>",
"Dissimilarity Index ", round(cvl_rva_measures$dissim_wb_block, 2)))%>%
addLegend("topright", pal = pal, values = cvl_rva_measures$dissim_wb_block
,
title = "Dissimilarity Indewx", opacity = 0.7)
cvl_rva_measures <- read_csv("cvl_rva_measures.csv")
cvl_rva_measures
##Resedential Segregation{.tabset}
###Dissimilarity
cvl_rva_measures <- st_transform(cvl_rva_measures, 4326)
##Resedential Segregation{.tabset}
###Dissimilarity
#cvl_rva_measures <- st_transform(cvl_rva_measures, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = cvl_rva_measures$dissim_wb_block
) # viridis
# cvl_rva_measures %>%
#   filter(dissim_wb_block >= 0.5 ) %>%
leaflet(cvl_rva_measures) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(dissim_wb_block),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", cvl_rva_measures$Region, "<br>",
"County: ", cvl_rva_measures$County, "<br>",
"Tract: ", cvl_rva_measures$NAMELSAD, "<br>",
"Dissimilarity Index ", round(cvl_rva_measures$dissim_wb_block, 2)))%>%
addLegend("topright", pal = pal, values = cvl_rva_measures$dissim_wb_block
,
title = "Dissimilarity Index", opacity = 0.7)
countytracts_updated<-countytracts %>%
mutate(county_tract=paste(COUNTYFP,TRACTCE, sep=""))
cvl_rva_measures<-countytracts_updated %>%
left_join(cvl_rva_measures,countytracts_updated, by="county_tract")
cvl_rva_measures<- cvl_rva_measures %>%
mutate(FipCodes=str_sub(GEOID,3,5)) %>%
mutate(County = case_when(
FipCodes=="540"~"Charlottesville",
FipCodes=="109"~"Louisa",
FipCodes=="125"~"Nelson",
FipCodes=="065"~"Fluvanna",
FipCodes=="003"~"Albemarle",
FipCodes=="079"~"Greene",
FipCodes=="760"~"Richmond City",
FipCodes=="087"~"Henrico County",
FipCodes=="041"~"Chesterfield County",
FipCodes=="670"~"Hopewell City",
FipCodes=="730"~"Petersburg City"
))
cvl_rva_measures<-cvl_rva_measures %>%
mutate(Region=case_when(
FipCodes %in% c("540","109","125", "065", "003", "079")~"Charlottesville",
FipCodes %in% c("760","087","041", "670", "730")~"Richmond"
))
# ##Resedential Segregation{.tabset}
#
# ###Dissimilarity
cvl_rva_measures <- st_transform(cvl_rva_measures, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = cvl_rva_measures$dissim_wb_block
) # viridis
# cvl_rva_measures %>%
#   filter(dissim_wb_block >= 0.5 ) %>%
leaflet(cvl_rva_measures) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(dissim_wb_block),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", cvl_rva_measures$Region, "<br>",
"County: ", cvl_rva_measures$County, "<br>",
"Tract: ", cvl_rva_measures$NAMELSAD, "<br>",
"Dissimilarity Index ", round(cvl_rva_measures$dissim_wb_block, 2)))%>%
addLegend("topright", pal = pal, values = cvl_rva_measures$dissim_wb_block
,
title = "Dissimilarity Index", opacity = 0.7)
# ### Isolation
# #cvl_rva_measures <- st_transform(cvl_rva_measures, 4326)
# pal <- colorNumeric("viridis", reverse = FALSE, domain = cvl_rva_measures$dissim_wb_block
# ) # viridis
#
#
# # cvl_rva_measures %>%
# #   filter(dissim_wb_block >= 0.5 ) %>%
# leaflet(cvl_rva_measures) %>%
#   #addTiles() %>% # basemap
#   addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
#   addPolygons(fillColor = ~pal(iso_b_block),
#               fillOpacity = 0.8,
#               color = "white",
#               weight = 2,
#               highlight = highlightOptions(
#                 weight = 3,
#                 fillOpacity = 0.9,
#                 bringToFront = T),
#               popup = paste0("Region: ", cvl_rva_measures$Region, "<br>",
#                              "County: ", cvl_rva_measures$County, "<br>",
#                              "Tract: ", cvl_rva_measures$NAMELSAD, "<br>",
#                              "Dissimilarity Index ", round(cvl_rva_measures$dissim_wb_block, 2)))%>%
#   addLegend("topright", pal = pal, values = cvl_rva_measures$dissim_wb_block
# ,
#           title = "Issolation Index", opacity = 0.7)
# ##{-}
##Residential Segregation{.tabset}
###Dissimilarity
cvl_rva_measures <- st_transform(cvl_rva_measures, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = cvl_rva_measures$dissim_wb_block
) # viridis
# cvl_rva_measures %>%
#   filter(dissim_wb_block >= 0.5 ) %>%
leaflet(cvl_rva_measures) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(dissim_wb_block),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", cvl_rva_measures$Region, "<br>",
"County: ", cvl_rva_measures$County, "<br>",
"Tract: ", cvl_rva_measures$NAMELSAD, "<br>",
"Dissimilarity Index ", round(cvl_rva_measures$dissim_wb_block, 2)))%>%
addLegend("topright", pal = pal, values = cvl_rva_measures$dissim_wb_block
,
title = "Dissimilarity Index", opacity = 0.7)
### Isolation
#cvl_rva_measures <- st_transform(cvl_rva_measures, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = cvl_rva_measures$dissim_wb_block
) # viridis
# cvl_rva_measures %>%
#   filter(dissim_wb_block >= 0.5 ) %>%
leaflet(cvl_rva_measures) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(iso_b_block),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", cvl_rva_measures$Region, "<br>",
"County: ", cvl_rva_measures$County, "<br>",
"Tract: ", cvl_rva_measures$NAMELSAD, "<br>",
"Dissimilarity Index ", round(cvl_rva_measures$dissim_wb_block, 2)))%>%
addLegend("topright", pal = pal, values = cvl_rva_measures$dissim_wb_block
,
title = "Issolation Index", opacity = 0.7)
##{-}
countytracts <- tracts(state = "51", county = cvl, year = 2020)
countytracts<-countytracts %>%
mutate(GEOID = as.numeric(countytracts$GEOID))
# by = c("GEOID1" = "GEOID2")
PovertybyRace <- st_transform(PovertybyRace, 4326)
PovertybyRace <- read_csv("PovertybyRaceData.csv")
PovertybyRace
countytracts <- tracts(state = "51", county = cvl, year = 2020)
countytracts<-countytracts %>%
mutate(GEOID = as.numeric(countytracts$GEOID))
# by = c("GEOID1" = "GEOID2")
PovertybyRace <- st_transform(PovertybyRace, 4326)
TenureByRace <- st_transform(TenureByRace, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = TenureByRace$PercOfBlkRenters) # viridis
leaflet(TenureByRace) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(PercOfBlkRenters),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", TenureByRace$Region, "<br>",
"County: ", TenureByRace$County, "<br>",
"Tract: ", TenureByRace$NAMELSAD, "<br>",
"Percentage of Black Renters: ", round(TenureByRace$PercOfBlkRenters, 2)))%>%
addLegend("topright", pal = pal, values = TenureByRace$PercOfBlkRenters,
title = "Percentage of Black Renters", opacity = 0.7)
TenureByRace <- st_transform(TenureByRace, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = TenureByRace$PercOfBlkRenters) # viridis
leaflet(TenureByRace) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(PercOfBlkRenters),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", TenureByRace$Region, "<br>",
"County: ", TenureByRace$County, "<br>",
"Tract: ", TenureByRace$NAMELSAD, "<br>",
"Percentage: ", round(TenureByRace$PercOfBlkRenters, 2)))%>%
addLegend("topright", pal = pal, values = TenureByRace$PercOfBlkRenters,
title = "Percentage of Black Renters", opacity = 0.7)
MedianHousingData<-CensusHousingData %>%
group_by(County) %>%
summarize(med_rent_est= median(MedRentE, na.rm=TRUE), med_rent_moe= median(MedRentM, na.rm=TRUE), med_tax_est=median(MedTaxE), med_tax_moe= median(MedRentM, na.rm=TRUE), MedRentTaxRatE=median(RentTaxRatE, na.rm=TRUE), MedRentTaxRatMOE=median(RentTaxRatMOE, na.rm=TRUE))
MedianHousingData<-ACSData2020 %>%
group_by(County) %>%
summarize(med_rent_est= median(MedRentE, na.rm=TRUE), med_rent_moe= median(MedRentM, na.rm=TRUE), med_tax_est=median(MedTaxE), med_tax_moe= median(MedRentM, na.rm=TRUE), MedRentTaxRatE=median(RentTaxRatE, na.rm=TRUE), MedRentTaxRatMOE=median(RentTaxRatMOE, na.rm=TRUE))
ggplot(ACSData2020) +
aes(x = County, y = RentTaxRatE) +
geom_boxplot()
ggplot(ACSData2020) +
aes(x = Region, y = RentTaxRatE) +
geom_boxplot()
ggplot(ACSData2020) +
aes(x = County, y = RentTaxRatE) +
geom_boxplot()
View(ACSData2020)
View(ACSData2020)
ggplot(ACSData2020) +
aes(x = Region, y = MedRentBurdenPercE) +
geom_boxplot()
ggplot(ACSData2020) +
aes(x = County, y = MedRentBurdenPercE) +
geom_boxplot()
cvl_rva_measures <- read_csv("cvl_rva_measures.csv")
cvl_rva_measures
cvl_rva_measures <- read_csv("cvl_rva_measures.csv")
cvl_rva_measures
cvl_rva_measures<-select(cvl_rva_measures,c(1, 4,2,3))
cvl_rva_measures <- read_csv("cvl_rva_measures.csv")
cvl_rva_measures<-select(cvl_rva_measures,c(1, 4,2,3))
cvl_rva_measures
##County Rent Comparison{.tabset}
###Rent Exploitation
ggplot(ACSData2020) +
aes(x = County, y = RentTaxRatE) +
geom_boxplot()
###Rent Burden
ggplot(ACSData2020) +
aes(x = County, y = MedRentBurdenPercE) +
geom_boxplot()
##{-}
##Region Rent Comparison{.tabset}
###Rent Exploitation
ggplot(ACSData2020) +
aes(x = Region, y = RentTaxRatE) +
geom_boxplot()
###Rent Burden
ggplot(ACSData2020) +
aes(x = Region, y = MedRentBurdenPercE) +
geom_boxplot()
##{-}
counties<-c("Albemarle", "Charlottesville", "Fluvanna", "Greene", "Louisa","Nelson", "Chesterfield County", "Henrico County", "Hopewell City", "Petersburg City", "Richmond City")
countytracts <- tracts(state = "51", county = counties, year = 2020)
countytracts <- TenureByRace %>%
#mutate(GEOID=as.numeric(TenureByRace$GEOID)) %>%
left_join(TenureByRace,countytracts, by = c( "FipCodes"="COUNTYFP"))
TenureByRace <- st_transform(TenureByRace, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = TenureByRace$PercOfBlkRenters) # viridis
leaflet(TenureByRace) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(PercOfBlkRenters),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", TenureByRace$Region, "<br>",
"County: ", TenureByRace$County, "<br>",
"Tract: ", TenureByRace$NAMELSAD, "<br>",
"Percentage: ", round(TenureByRace$PercOfBlkRenters, 2)))%>%
addLegend("topright", pal = pal, values = TenureByRace$PercOfBlkRenters,
title = "Percentage of Black Renters", opacity = 0.7)
##Percentage of Black Renters{.tabset}
###Total
TenureByRace <- st_transform(TenureByRace, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = TenureByRace$PercOfBlkRenters) # viridis
leaflet(TenureByRace) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(PercOfBlkRenters),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", TenureByRace$Region, "<br>",
"County: ", TenureByRace$County, "<br>",
"Tract: ", TenureByRace$NAMELSAD, "<br>",
"Percentage: ", round(TenureByRace$PercOfBlkRenters, 2)))%>%
addLegend("topright", pal = pal, values = TenureByRace$PercOfBlkRenters,
title = "Percentage of Black Renters", opacity = 0.7)
###Predominately Black Tracts
TenureByRace <- st_transform(TenureByRace, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = TenureByRace$PercOfBlkRenters) # viridis
TenureByRace %>%
filter(PercOfBlkRenters >= 40 ) %>%
leaflet() %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(PercOfBlkRenters),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", TenureByRace$Region, "<br>",
"County: ", TenureByRace$County, "<br>",
"Tract: ", TenureByRace$NAMELSAD, "<br>",
"Percentage: ", round(TenureByRace$PercOfBlkRenters, 2)))%>%
addLegend("topright", pal = pal, values = TenureByRace$PercOfBlkRenters,
title = "Percentage of Black Renters", opacity = 0.7)
##{-}
# counties<-c("Albemarle", "Charlottesville", "Fluvanna", "Greene", "Louisa","Nelson", "Chesterfield County", "Henrico County", "Hopewell City", "Petersburg City", "Richmond City")
# countytracts <- tracts(state = "51", county = counties, year = 2020)
#
# TenureByRace<-countytracts %>%
#   mutate(GEOID=as.character(countytracts$GEOID)) %>%
#   st_join(TenureByRace,countytracts, by="GEOID")
#
#
#
# countytracts <- tracts(state = "51", county = cvl, year = 2020)
# countytracts<-countytracts %>%
#   mutate(GEOID = as.numeric(countytracts$GEOID))
# # by = c("GEOID1" = "GEOID2")
# PovertybyRace <- st_transform(PovertybyRace, 4326)
#
# TenureByRace <- st_transform(TenureByRace, 4326)
# pal <- colorNumeric("viridis", reverse = FALSE, domain = PovertybyRace$IncomeInequalityE) # viridis
leaflet(PovertybyRace) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(IncomeInequalityE),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", PovertybyRace$Region, "<br>",
"County: ", PovertybyRace$County, "<br>",
"Tract: ", PovertybyRace$NAMELSAD, "<br>",
"Percentage: ", round(PovertybyRace$IncomeInequalityE, 2)))%>%
addLegend("topright", pal = pal, values = PovertybyRace$IncomeInequalityE,
title = "Gini Index of Income Inequality", opacity = 0.7)
# counties<-c("Albemarle", "Charlottesville", "Fluvanna", "Greene", "Louisa","Nelson", "Chesterfield County", "Henrico County", "Hopewell City", "Petersburg City", "Richmond City")
# countytracts <- tracts(state = "51", county = counties, year = 2020)
#
# TenureByRace<-countytracts %>%
#   mutate(GEOID=as.character(countytracts$GEOID)) %>%
#   st_join(TenureByRace,countytracts, by="GEOID")
#
#
#
# countytracts <- tracts(state = "51", county = cvl, year = 2020)
# countytracts<-countytracts %>%
#   mutate(GEOID = as.numeric(countytracts$GEOID))
# # by = c("GEOID1" = "GEOID2")
# PovertybyRace <- st_transform(PovertybyRace, 4326)
#
PovertybyRace <- st_transform(TenureByRace, 4326)
pal <- colorNumeric("viridis", reverse = FALSE, domain = PovertybyRace$IncomeInequalityE) # viridis
leaflet(PovertybyRace) %>%
#addTiles() %>% # basemap
addProviderTiles("CartoDB.Positron") %>% # CartoDB.Positron, Stamen.Toner, Esri.NatGeoWorldMap
addPolygons(fillColor = ~pal(IncomeInequalityE),
fillOpacity = 0.8,
color = "white",
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("Region: ", PovertybyRace$Region, "<br>",
"County: ", PovertybyRace$County, "<br>",
"Tract: ", PovertybyRace$NAMELSAD, "<br>",
"Percentage: ", round(PovertybyRace$IncomeInequalityE, 2)))%>%
addLegend("topright", pal = pal, values = PovertybyRace$IncomeInequalityE,
title = "Gini Index of Income Inequality", opacity = 0.7)
